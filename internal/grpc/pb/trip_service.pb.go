// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: internal/grpc/trip_service.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BookingStatus int32

const (
	BookingStatus_INCOMPLETED BookingStatus = 0 // The booking has been confirmed but not completed
	BookingStatus_COMPLETED   BookingStatus = 1 // The booking has been completed
	BookingStatus_CANCELED    BookingStatus = 2 // The booking has been canceled
)

// Enum value maps for BookingStatus.
var (
	BookingStatus_name = map[int32]string{
		0: "INCOMPLETED",
		1: "COMPLETED",
		2: "CANCELED",
	}
	BookingStatus_value = map[string]int32{
		"INCOMPLETED": 0,
		"COMPLETED":   1,
		"CANCELED":    2,
	}
)

func (x BookingStatus) Enum() *BookingStatus {
	p := new(BookingStatus)
	*p = x
	return p
}

func (x BookingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BookingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_grpc_trip_service_proto_enumTypes[0].Descriptor()
}

func (BookingStatus) Type() protoreflect.EnumType {
	return &file_internal_grpc_trip_service_proto_enumTypes[0]
}

func (x BookingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BookingStatus.Descriptor instead.
func (BookingStatus) EnumDescriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{0}
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentPage uint64 `protobuf:"varint,1,opt,name=current_page,json=currentPage,proto3" json:"current_page,omitempty"`
	PrevPage    uint64 `protobuf:"varint,2,opt,name=prev_page,json=prevPage,proto3" json:"prev_page,omitempty"`
	NextPage    uint64 `protobuf:"varint,3,opt,name=next_page,json=nextPage,proto3" json:"next_page,omitempty"`
	TotalPage   uint64 `protobuf:"varint,4,opt,name=total_page,json=totalPage,proto3" json:"total_page,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{0}
}

func (x *Pagination) GetCurrentPage() uint64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *Pagination) GetPrevPage() uint64 {
	if x != nil {
		return x.PrevPage
	}
	return 0
}

func (x *Pagination) GetNextPage() uint64 {
	if x != nil {
		return x.NextPage
	}
	return 0
}

func (x *Pagination) GetTotalPage() uint64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

type TripBooking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Pickup        string                 `protobuf:"bytes,2,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Destination   string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Distance      float64                `protobuf:"fixed64,4,opt,name=distance,proto3" json:"distance,omitempty"`
	Fare          float64                `protobuf:"fixed64,5,opt,name=fare,proto3" json:"fare,omitempty"`
	PaymentMethod string                 `protobuf:"bytes,6,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	Date          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=date,proto3" json:"date,omitempty"`
	BookingStatus BookingStatus          `protobuf:"varint,8,opt,name=booking_status,json=bookingStatus,proto3,enum=trip_service.BookingStatus" json:"booking_status,omitempty"`
	UserId        uint64                 `protobuf:"varint,9,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *TripBooking) Reset() {
	*x = TripBooking{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TripBooking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TripBooking) ProtoMessage() {}

func (x *TripBooking) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TripBooking.ProtoReflect.Descriptor instead.
func (*TripBooking) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{1}
}

func (x *TripBooking) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TripBooking) GetPickup() string {
	if x != nil {
		return x.Pickup
	}
	return ""
}

func (x *TripBooking) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *TripBooking) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TripBooking) GetFare() float64 {
	if x != nil {
		return x.Fare
	}
	return 0
}

func (x *TripBooking) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *TripBooking) GetDate() *timestamppb.Timestamp {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *TripBooking) GetBookingStatus() BookingStatus {
	if x != nil {
		return x.BookingStatus
	}
	return BookingStatus_INCOMPLETED
}

func (x *TripBooking) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type SearchTripPreviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pickup      string `protobuf:"bytes,1,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Destination string `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
}

func (x *SearchTripPreviewRequest) Reset() {
	*x = SearchTripPreviewRequest{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTripPreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTripPreviewRequest) ProtoMessage() {}

func (x *SearchTripPreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTripPreviewRequest.ProtoReflect.Descriptor instead.
func (*SearchTripPreviewRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{2}
}

func (x *SearchTripPreviewRequest) GetPickup() string {
	if x != nil {
		return x.Pickup
	}
	return ""
}

func (x *SearchTripPreviewRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

type SearchTripPreviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pickup               string                 `protobuf:"bytes,1,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Destination          string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Distance             float64                `protobuf:"fixed64,3,opt,name=distance,proto3" json:"distance,omitempty"`
	Fare                 float64                `protobuf:"fixed64,4,opt,name=fare,proto3" json:"fare,omitempty"`
	EstimatedArrivalTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=estimated_arrival_time,json=estimatedArrivalTime,proto3" json:"estimated_arrival_time,omitempty"`
	EstimatedWaitingTime int64                  `protobuf:"varint,6,opt,name=estimated_waiting_time,json=estimatedWaitingTime,proto3" json:"estimated_waiting_time,omitempty"`
	NumOfAvailableTaxis  int64                  `protobuf:"varint,7,opt,name=num_of_available_taxis,json=numOfAvailableTaxis,proto3" json:"num_of_available_taxis,omitempty"`
	NearestTaxiLongitude float64                `protobuf:"fixed64,8,opt,name=nearest_taxi_longitude,json=nearestTaxiLongitude,proto3" json:"nearest_taxi_longitude,omitempty"`
	NearestTaxiLatitude  float64                `protobuf:"fixed64,9,opt,name=nearest_taxi_latitude,json=nearestTaxiLatitude,proto3" json:"nearest_taxi_latitude,omitempty"`
	DefaultPaymentMethod string                 `protobuf:"bytes,10,opt,name=default_payment_method,json=defaultPaymentMethod,proto3" json:"default_payment_method,omitempty"`
}

func (x *SearchTripPreviewResponse) Reset() {
	*x = SearchTripPreviewResponse{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchTripPreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTripPreviewResponse) ProtoMessage() {}

func (x *SearchTripPreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTripPreviewResponse.ProtoReflect.Descriptor instead.
func (*SearchTripPreviewResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{3}
}

func (x *SearchTripPreviewResponse) GetPickup() string {
	if x != nil {
		return x.Pickup
	}
	return ""
}

func (x *SearchTripPreviewResponse) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *SearchTripPreviewResponse) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *SearchTripPreviewResponse) GetFare() float64 {
	if x != nil {
		return x.Fare
	}
	return 0
}

func (x *SearchTripPreviewResponse) GetEstimatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedArrivalTime
	}
	return nil
}

func (x *SearchTripPreviewResponse) GetEstimatedWaitingTime() int64 {
	if x != nil {
		return x.EstimatedWaitingTime
	}
	return 0
}

func (x *SearchTripPreviewResponse) GetNumOfAvailableTaxis() int64 {
	if x != nil {
		return x.NumOfAvailableTaxis
	}
	return 0
}

func (x *SearchTripPreviewResponse) GetNearestTaxiLongitude() float64 {
	if x != nil {
		return x.NearestTaxiLongitude
	}
	return 0
}

func (x *SearchTripPreviewResponse) GetNearestTaxiLatitude() float64 {
	if x != nil {
		return x.NearestTaxiLatitude
	}
	return 0
}

func (x *SearchTripPreviewResponse) GetDefaultPaymentMethod() string {
	if x != nil {
		return x.DefaultPaymentMethod
	}
	return ""
}

type ConfirmBookingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pickup               string                 `protobuf:"bytes,1,opt,name=pickup,proto3" json:"pickup,omitempty"`
	Destination          string                 `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Distance             float64                `protobuf:"fixed64,3,opt,name=distance,proto3" json:"distance,omitempty"`
	Fare                 float64                `protobuf:"fixed64,4,opt,name=fare,proto3" json:"fare,omitempty"`
	EstimatedArrivalTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=estimated_arrival_time,json=estimatedArrivalTime,proto3" json:"estimated_arrival_time,omitempty"`
	EstimatedWaitingTime int64                  `protobuf:"varint,6,opt,name=estimated_waiting_time,json=estimatedWaitingTime,proto3" json:"estimated_waiting_time,omitempty"`
	NumOfAvailableTaxis  int64                  `protobuf:"varint,7,opt,name=num_of_available_taxis,json=numOfAvailableTaxis,proto3" json:"num_of_available_taxis,omitempty"`
	NearestTaxiLongitude float64                `protobuf:"fixed64,8,opt,name=nearest_taxi_longitude,json=nearestTaxiLongitude,proto3" json:"nearest_taxi_longitude,omitempty"`
	NearestTaxiLatitude  float64                `protobuf:"fixed64,9,opt,name=nearest_taxi_latitude,json=nearestTaxiLatitude,proto3" json:"nearest_taxi_latitude,omitempty"`
	DefaultPaymentMethod string                 `protobuf:"bytes,10,opt,name=default_payment_method,json=defaultPaymentMethod,proto3" json:"default_payment_method,omitempty"`
	UserId               uint64                 `protobuf:"varint,11,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ConfirmBookingRequest) Reset() {
	*x = ConfirmBookingRequest{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmBookingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmBookingRequest) ProtoMessage() {}

func (x *ConfirmBookingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmBookingRequest.ProtoReflect.Descriptor instead.
func (*ConfirmBookingRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{4}
}

func (x *ConfirmBookingRequest) GetPickup() string {
	if x != nil {
		return x.Pickup
	}
	return ""
}

func (x *ConfirmBookingRequest) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *ConfirmBookingRequest) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *ConfirmBookingRequest) GetFare() float64 {
	if x != nil {
		return x.Fare
	}
	return 0
}

func (x *ConfirmBookingRequest) GetEstimatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedArrivalTime
	}
	return nil
}

func (x *ConfirmBookingRequest) GetEstimatedWaitingTime() int64 {
	if x != nil {
		return x.EstimatedWaitingTime
	}
	return 0
}

func (x *ConfirmBookingRequest) GetNumOfAvailableTaxis() int64 {
	if x != nil {
		return x.NumOfAvailableTaxis
	}
	return 0
}

func (x *ConfirmBookingRequest) GetNearestTaxiLongitude() float64 {
	if x != nil {
		return x.NearestTaxiLongitude
	}
	return 0
}

func (x *ConfirmBookingRequest) GetNearestTaxiLatitude() float64 {
	if x != nil {
		return x.NearestTaxiLatitude
	}
	return 0
}

func (x *ConfirmBookingRequest) GetDefaultPaymentMethod() string {
	if x != nil {
		return x.DefaultPaymentMethod
	}
	return ""
}

func (x *ConfirmBookingRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ConfirmBookingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result               string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	Id                   uint64                 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	EstimatedArrivalTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=estimated_arrival_time,json=estimatedArrivalTime,proto3" json:"estimated_arrival_time,omitempty"`
	EstimatedWaitingTime int64                  `protobuf:"varint,4,opt,name=estimated_waiting_time,json=estimatedWaitingTime,proto3" json:"estimated_waiting_time,omitempty"`
	BookingStatus        BookingStatus          `protobuf:"varint,5,opt,name=booking_status,json=bookingStatus,proto3,enum=trip_service.BookingStatus" json:"booking_status,omitempty"`
}

func (x *ConfirmBookingResponse) Reset() {
	*x = ConfirmBookingResponse{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmBookingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmBookingResponse) ProtoMessage() {}

func (x *ConfirmBookingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmBookingResponse.ProtoReflect.Descriptor instead.
func (*ConfirmBookingResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{5}
}

func (x *ConfirmBookingResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

func (x *ConfirmBookingResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfirmBookingResponse) GetEstimatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedArrivalTime
	}
	return nil
}

func (x *ConfirmBookingResponse) GetEstimatedWaitingTime() int64 {
	if x != nil {
		return x.EstimatedWaitingTime
	}
	return 0
}

func (x *ConfirmBookingResponse) GetBookingStatus() BookingStatus {
	if x != nil {
		return x.BookingStatus
	}
	return BookingStatus_INCOMPLETED
}

// For cancelling or completed
type UpdateBookingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EstimatedArrivalTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=estimated_arrival_time,json=estimatedArrivalTime,proto3" json:"estimated_arrival_time,omitempty"`
	EstimatedWaitingTime int64                  `protobuf:"varint,3,opt,name=estimated_waiting_time,json=estimatedWaitingTime,proto3" json:"estimated_waiting_time,omitempty"`
	BookingStatus        BookingStatus          `protobuf:"varint,4,opt,name=booking_status,json=bookingStatus,proto3,enum=trip_service.BookingStatus" json:"booking_status,omitempty"`
	UserId               uint64                 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UpdateBookingRequest) Reset() {
	*x = UpdateBookingRequest{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBookingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBookingRequest) ProtoMessage() {}

func (x *UpdateBookingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBookingRequest.ProtoReflect.Descriptor instead.
func (*UpdateBookingRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateBookingRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateBookingRequest) GetEstimatedArrivalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EstimatedArrivalTime
	}
	return nil
}

func (x *UpdateBookingRequest) GetEstimatedWaitingTime() int64 {
	if x != nil {
		return x.EstimatedWaitingTime
	}
	return 0
}

func (x *UpdateBookingRequest) GetBookingStatus() BookingStatus {
	if x != nil {
		return x.BookingStatus
	}
	return BookingStatus_INCOMPLETED
}

func (x *UpdateBookingRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateBookingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UpdateBookingResponse) Reset() {
	*x = UpdateBookingResponse{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateBookingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBookingResponse) ProtoMessage() {}

func (x *UpdateBookingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBookingResponse.ProtoReflect.Descriptor instead.
func (*UpdateBookingResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateBookingResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetBookingHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   uint64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Limit  uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	UserId uint64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	// Filters
	BookingStatuses []BookingStatus `protobuf:"varint,4,rep,packed,name=booking_statuses,json=bookingStatuses,proto3,enum=trip_service.BookingStatus" json:"booking_statuses,omitempty"` // List of booking statuses to filter by
	// Sorting
	OrderAsc bool `protobuf:"varint,5,opt,name=order_asc,json=orderAsc,proto3" json:"order_asc,omitempty"` // If true, order by ascending date; if false, order by descending
}

func (x *GetBookingHistoryRequest) Reset() {
	*x = GetBookingHistoryRequest{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookingHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookingHistoryRequest) ProtoMessage() {}

func (x *GetBookingHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookingHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetBookingHistoryRequest) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetBookingHistoryRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBookingHistoryRequest) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetBookingHistoryRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetBookingHistoryRequest) GetBookingStatuses() []BookingStatus {
	if x != nil {
		return x.BookingStatuses
	}
	return nil
}

func (x *GetBookingHistoryRequest) GetOrderAsc() bool {
	if x != nil {
		return x.OrderAsc
	}
	return false
}

type GetBookingHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pagination *Pagination    `protobuf:"bytes,1,opt,name=pagination,proto3" json:"pagination,omitempty"`
	Result     []*TripBooking `protobuf:"bytes,2,rep,name=result,proto3" json:"result,omitempty"`
}

func (x *GetBookingHistoryResponse) Reset() {
	*x = GetBookingHistoryResponse{}
	mi := &file_internal_grpc_trip_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBookingHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBookingHistoryResponse) ProtoMessage() {}

func (x *GetBookingHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_grpc_trip_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBookingHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetBookingHistoryResponse) Descriptor() ([]byte, []int) {
	return file_internal_grpc_trip_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetBookingHistoryResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *GetBookingHistoryResponse) GetResult() []*TripBooking {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_internal_grpc_trip_service_proto protoreflect.FileDescriptor

var file_internal_grpc_trip_service_proto_rawDesc = []byte{
	0x0a, 0x20, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x22, 0xba, 0x02, 0x0a,
	0x0b, 0x54, 0x72, 0x69, 0x70, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x66, 0x61, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x18, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xe2, 0x03, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x04, 0x66, 0x61, 0x72, 0x65, 0x12, 0x50, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x33, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x78, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x61, 0x78, 0x69, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x5f,
	0x74, 0x61, 0x78, 0x69, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x54, 0x61, 0x78,
	0x69, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6e, 0x65,
	0x61, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x69, 0x5f, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6e, 0x65, 0x61, 0x72, 0x65,
	0x73, 0x74, 0x54, 0x61, 0x78, 0x69, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x22, 0xf6, 0x03, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x66, 0x61, 0x72, 0x65, 0x12, 0x50, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x33, 0x0a, 0x16, 0x6e, 0x75, 0x6d, 0x5f, 0x6f, 0x66, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x78, 0x69, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x6e, 0x75, 0x6d, 0x4f, 0x66, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x61, 0x78, 0x69, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x61, 0x78, 0x69, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x54, 0x61,
	0x78, 0x69, 0x4c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6e,
	0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x78, 0x69, 0x5f, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6e, 0x65, 0x61, 0x72,
	0x65, 0x73, 0x74, 0x54, 0x61, 0x78, 0x69, 0x4c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x34, 0x0a, 0x16, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x8c, 0x02,
	0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x50, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x72,
	0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x14, 0x65, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x57, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d, 0x62,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8a, 0x02, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x50, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x41, 0x72, 0x72, 0x69,
	0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x64, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a,
	0x0e, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0d, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x65,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x73, 0x63, 0x22, 0x88,
	0x01, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x72, 0x69, 0x70, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2a, 0x3d, 0x0a, 0x0d, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x32, 0x96, 0x03, 0x0a, 0x0b, 0x54, 0x72, 0x69,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x2e,
	0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x72, 0x69, 0x70, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x23, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x22, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x64, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x26, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74, 0x72, 0x69, 0x70, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x13, 0x5a, 0x11, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67,
	0x72, 0x70, 0x63, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_grpc_trip_service_proto_rawDescOnce sync.Once
	file_internal_grpc_trip_service_proto_rawDescData = file_internal_grpc_trip_service_proto_rawDesc
)

func file_internal_grpc_trip_service_proto_rawDescGZIP() []byte {
	file_internal_grpc_trip_service_proto_rawDescOnce.Do(func() {
		file_internal_grpc_trip_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_grpc_trip_service_proto_rawDescData)
	})
	return file_internal_grpc_trip_service_proto_rawDescData
}

var file_internal_grpc_trip_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_grpc_trip_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_internal_grpc_trip_service_proto_goTypes = []any{
	(BookingStatus)(0),                // 0: trip_service.BookingStatus
	(*Pagination)(nil),                // 1: trip_service.Pagination
	(*TripBooking)(nil),               // 2: trip_service.TripBooking
	(*SearchTripPreviewRequest)(nil),  // 3: trip_service.SearchTripPreviewRequest
	(*SearchTripPreviewResponse)(nil), // 4: trip_service.SearchTripPreviewResponse
	(*ConfirmBookingRequest)(nil),     // 5: trip_service.ConfirmBookingRequest
	(*ConfirmBookingResponse)(nil),    // 6: trip_service.ConfirmBookingResponse
	(*UpdateBookingRequest)(nil),      // 7: trip_service.UpdateBookingRequest
	(*UpdateBookingResponse)(nil),     // 8: trip_service.UpdateBookingResponse
	(*GetBookingHistoryRequest)(nil),  // 9: trip_service.GetBookingHistoryRequest
	(*GetBookingHistoryResponse)(nil), // 10: trip_service.GetBookingHistoryResponse
	(*timestamppb.Timestamp)(nil),     // 11: google.protobuf.Timestamp
}
var file_internal_grpc_trip_service_proto_depIdxs = []int32{
	11, // 0: trip_service.TripBooking.date:type_name -> google.protobuf.Timestamp
	0,  // 1: trip_service.TripBooking.booking_status:type_name -> trip_service.BookingStatus
	11, // 2: trip_service.SearchTripPreviewResponse.estimated_arrival_time:type_name -> google.protobuf.Timestamp
	11, // 3: trip_service.ConfirmBookingRequest.estimated_arrival_time:type_name -> google.protobuf.Timestamp
	11, // 4: trip_service.ConfirmBookingResponse.estimated_arrival_time:type_name -> google.protobuf.Timestamp
	0,  // 5: trip_service.ConfirmBookingResponse.booking_status:type_name -> trip_service.BookingStatus
	11, // 6: trip_service.UpdateBookingRequest.estimated_arrival_time:type_name -> google.protobuf.Timestamp
	0,  // 7: trip_service.UpdateBookingRequest.booking_status:type_name -> trip_service.BookingStatus
	0,  // 8: trip_service.GetBookingHistoryRequest.booking_statuses:type_name -> trip_service.BookingStatus
	1,  // 9: trip_service.GetBookingHistoryResponse.pagination:type_name -> trip_service.Pagination
	2,  // 10: trip_service.GetBookingHistoryResponse.result:type_name -> trip_service.TripBooking
	3,  // 11: trip_service.TripService.SearchTripPreview:input_type -> trip_service.SearchTripPreviewRequest
	5,  // 12: trip_service.TripService.ConfirmBooking:input_type -> trip_service.ConfirmBookingRequest
	7,  // 13: trip_service.TripService.UpdateBookingStatus:input_type -> trip_service.UpdateBookingRequest
	9,  // 14: trip_service.TripService.GetBookingHistory:input_type -> trip_service.GetBookingHistoryRequest
	4,  // 15: trip_service.TripService.SearchTripPreview:output_type -> trip_service.SearchTripPreviewResponse
	6,  // 16: trip_service.TripService.ConfirmBooking:output_type -> trip_service.ConfirmBookingResponse
	8,  // 17: trip_service.TripService.UpdateBookingStatus:output_type -> trip_service.UpdateBookingResponse
	10, // 18: trip_service.TripService.GetBookingHistory:output_type -> trip_service.GetBookingHistoryResponse
	15, // [15:19] is the sub-list for method output_type
	11, // [11:15] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_internal_grpc_trip_service_proto_init() }
func file_internal_grpc_trip_service_proto_init() {
	if File_internal_grpc_trip_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_grpc_trip_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_grpc_trip_service_proto_goTypes,
		DependencyIndexes: file_internal_grpc_trip_service_proto_depIdxs,
		EnumInfos:         file_internal_grpc_trip_service_proto_enumTypes,
		MessageInfos:      file_internal_grpc_trip_service_proto_msgTypes,
	}.Build()
	File_internal_grpc_trip_service_proto = out.File
	file_internal_grpc_trip_service_proto_rawDesc = nil
	file_internal_grpc_trip_service_proto_goTypes = nil
	file_internal_grpc_trip_service_proto_depIdxs = nil
}
